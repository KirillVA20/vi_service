apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:7
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGO_INITDB_DATABASE
              value: task_db
          readinessProbe:
            exec:
              command: ["mongosh", "--quiet", "--eval", "db.adminCommand({ ping: 1 })"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            exec:
              command: ["mongosh", "--quiet", "--eval", "db.adminCommand({ ping: 1 })"]
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 6
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        storageClassName: standard
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
